<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="top.cflwork.controller"/>
    <mvc:annotation-driven/>

    <bean class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="209715200"/>
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <mvc:resources location="/static/" mapping="/static/**"/>
    <mvc:resources location="/uploads/" mapping="/uploads/**"/>
    <mvc:resources location="/upload/" mapping="/upload/**"/>

    <!--
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="common/error" />
    </bean>
    -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:/i18n/messages.properties</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>
    <!-- 拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:mapping path="/index"/>
            <mvc:mapping path="/user/loginPage"/>
            <bean class="top.cflwork.controller.FilterController"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- 声明切面类 -->
    <bean id="WebLogAspect" class="top.cflwork.aspect.WebLogAspect"></bean>
    <aop:config>
        <!-- 声明切面 -->
        <aop:aspect ref="WebLogAspect">
            <!--
                1、pointcut="@annotation(com.ctlovedove.log.annotation.SystemControllerLog)" 表示切入点是注解
                2、method 指向的方法，是切面类中的方法，表示当程序触发pointcut指向的注解时，aop会启动method方法
            -->
            <aop:before method="doBefore" pointcut="@annotation(top.cflwork.util.Log)"/>
        </aop:aspect>
    </aop:config>
</beans>